name: .NET

on:
  workflow_dispatch:
  schedule:
  #Run each day at 22:15
    - cron: '15 22 * * *'
  pull_request:
    paths:
      - 'ui_tests/**'

jobs:
  tests_unitTests:
    name: Unit and UI tests
    runs-on: ubuntu-latest
    defaults:
        run:
            working-directory: ./ui_tests

    steps:
      
    # Slack message of Unit tests fail  
    - name: Slack Notification for Unit tests
      if: ${{ steps.unitTests.outcome == 'failure' && failure() }} 
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_USERNAME: Tests execution report
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: ts_website_automation
        SLACK_ICON_EMOJI: ':warning:'
        SLACK_COLOR: ${{ job.status }}
        SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        SLACK_TITLE: .Net Unit tests
        MSG_MINIMAL: true
        SLACK_FOOTER: TS website
        
    - name: Run Playwright installation
      shell: pwsh
      run: pwsh -Command "./PlaywrightAutomation/bin/Debug/net6.0/playwright.ps1 install"
      
    - name: UI tests
      if: github.event_name == 'pull_request'
      run: dotnet test ./PlaywrightAutomation.sln --filter "TestCategory=Smoke&TestCategory!=NotRun"
    
    # Jobs to run on Schedule or Manually
    - name: UI tests on Schedule or Manual  run
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      run: dotnet test ./PlaywrightAutomation.sln --filter "TestCategory!=OnBuild&TestCategory!=NotRun"
         
    - name: Preparing Slack emoji
      uses: haya14busa/action-cond@v1
      if: ${{ steps.unitTests.outcome == 'success' && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure())) }} 
      id: slack_icon_emoji
      with:
        cond: ${{ job.status == 'failure' }}
        if_true: ':finnadie:'
        if_false: ':aw_yeah:'
          
    - name: Slack Notification for UI tests to QA service channel
      if: ${{ steps.unitTests.outcome == 'success' && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure())) }} 
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_USERNAME: Tests execution report
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: ts_website_automation
        SLACK_ICON_EMOJI: ${{ steps.slack_icon_emoji.outputs.value }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_MESSAGE: https://tech-stack-dev.github.io/ts-website-automation/${{ github.run_number }}
        SLACK_TITLE: .Net UI tests
        MSG_MINIMAL: true
        SLACK_FOOTER: TS website
      
    - name: Slack Notification for UI tests to Product channel
      if: ${{ steps.unitTests.outcome == 'success' && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure())) }} 
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_USERNAME: Tests execution report
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: ts_website
        SLACK_ICON_EMOJI: ${{ steps.slack_icon_emoji.outputs.value }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_MESSAGE: https://tech-stack-dev.github.io/ts-website-automation/${{ github.run_number }}
        SLACK_TITLE: .Net UI tests
        MSG_MINIMAL: true
        SLACK_FOOTER: TS website
        