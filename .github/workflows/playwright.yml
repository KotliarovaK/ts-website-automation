name: Playwright UI E2E

on:
  workflow_dispatch:
  schedule:
  #Run each day at 21:10
    - cron: '10 21 * * *'
  pull_request:
    paths:
      - "ui_tests_playwright/**"

jobs:
  tests_e2e:
    name: Playwright end-to-end tests
    runs-on: ubuntu-latest
    env:
        AWS_KEY: ${{secrets.AWS_KEY}}
        AWS_PASSWORD: ${{secrets.AWS_PASSWORD}}
    defaults:
        run:
            working-directory: ./ui_tests_playwright
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
      
      - name: Install dependencies
        run: npm ci
        
      - name: Install playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run UI tests
        run: npx playwright test
        
      - name: Debug job status
        run: echo "job status:${{ job.status }}"
        
      - name: Debug event name
        run: echo "event name:${{ github.event_name }}"
        
      - uses: actions/upload-artifact@v3
        name: Upload Playwright report
        if: always()
        with:
            name: playwright-report
            path: ui_tests_playwright/playwright-report/
            retention-days: 30
            
      - name: Preparing Slack emoji
        uses: haya14busa/action-cond@v1
        if: ${{ ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure())) }} 
        id: slack_icon_emoji
        with:
            cond: ${{ job.status == 'failure' }}
            if_true: ':finnadie:'
            if_false: ':aw_yeah:'
      
      - name: Set Slack Channel
        uses: haya14busa/action-cond@v1
        if: ${{ ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure())) }} 
        id: slack_channel
        with:
            cond: ${{ github.event_name == 'pull_request' && job.status == 'failure' }}
            if_true: 'test_slack_notifications,ts_website_automation'
            if_false: 'test_slack_notifications'
      
      - name: Slack Notification for UI tests
        if: ${{ ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure())) }} 
        run: |
          channels=(${{ steps.slack_channel.outputs.value }})
          for channel in "${channels[@]}"; do
            env:
              SLACK_USERNAME: Tests execution report \
              SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }} \
              SLACK_CHANNEL: "$channel" \
              SLACK_ICON_EMOJI: ${{ steps.slack_icon_emoji.outputs.value }} \
              SLACK_COLOR: ${{ job.status }} \
              SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \
              SLACK_TITLE: TypeScript UI tests \
              MSG_MINIMAL: true \
              SLACK_FOOTER: TS website \
              node_modules/.bin/slack-notify
          done
